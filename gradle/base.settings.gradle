def repoDir(settingsDir) {
        return new ByteArrayOutputStream().withStream { os ->
                exec {
                        workingDir settingsDir
                        commandLine 'git', 'rev-parse', '--show-toplevel'
                        standardOutput = os
                }
                file(os.toString()[0..-2]).toPath()
        }
}
/**
  use in settings.gradle
  apply from: <route to this script>
  setUp name: <name of project>, deps: [
          'domain/projec-name'
  ]
 */
def settingsDir = settingsDir.toPath()
def repoDir = repoDir(settingsDir)  
def srcDirName = repoDir.relativize(settingsDir).getName(0) 
def srcDir = repoDir.resolve(srcDirName)

def setUp = { conf ->
        def name = srcDir
                .relativize(settingsDir)
                .toString()
                .replaceAll("/",".")
        println("naming project: $name")
        rootProject.name = name
        conf.deps.each{
                it ->
                includeBuild "$srcDir/$it"
        }
}


ext.setUp = setUp
ext.repoDir = repoDir
ext.srcDir = srcDir
